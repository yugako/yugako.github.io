{"version":3,"sources":["webpack:///./node_modules/@firebase/util/dist/index.cjs.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","CONSTANTS","NODE_CLIENT","NODE_ADMIN","SDK_VERSION","assert","assertion","message","assertionError","Error","stringToByteArray","str","out","p","i","length","c","charCodeAt","byteArrayToString","bytes","pos","c1","String","fromCharCode","c2","c3","c4","u","join","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","opt_webSafe","Array","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","haveByte4","byte4","base64Encode","utf8Bytes","base64Decode","e","console","error","deepCopy","deepExtend","undefined","target","source","constructor","Date","dateValue","getTime","prop","hasOwnProperty","patchProperty","obj","Deferred","_this","promise","Promise","resolve","reject","prototype","wrapCallback","callback","catch","getUA","navigator","isMobileCordova","window","test","isReactNative","isNodeSdk","ERROR_NAME","captureStackTrace","patchCapture","captureFake","result","FirebaseError","code","ErrorFactory","create","apply","arguments","err","name","get","stack","service","serviceName","errors","pattern","data","template","fullCode","replace","match","key","toString","slice","jsonEval","JSON","parse","stringify","decode","token","header","claims","signature","parts","split","isValidTimestamp","validSince","validUntil","now","Math","floor","issuedAtTime","isValidFormat","decoded","isAdmin","contains","call","safeGet","forEach","fn","extend","objTo","objFrom","clone","isNonNullObject","isEmpty","getCount","rv","map","f","opt_obj","res","findKey","opt_this","findValue","getAnyKey","getValues","every","querystring","querystringParams","params","arrayVal","encodeURIComponent","querystringDecode","tokens","Hash","blockSize","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","reset","__extends","compress_","buf","opt_offset","W","t","k","a","b","d","update","opt_length","lengthMinusBlock","n","inbuf","digest","totalBits","j","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","observers","unsubscribes","observerCount","task","finalized","then","next","forEachObserver","observer","close","complete","nextOrObserver","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","sendOne","async","onError","args","_i","methods","methods_1","method","validateArgCount","fnName","minCount","maxCount","argCount","argError","errorPrefix","argumentNumber","optional","argName","validateNamespace","namespace","validateCallback","validateContextObject","context","stringToByteArray$1","high","low","stringLength"],"mappings":"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","file":"src/assets/js/chunk-vendors~86a9aebb.51b4ecf5.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n"],"sourceRoot":""}